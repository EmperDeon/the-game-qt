Just some unused code (ex. Render from qt examples)

// EMain

QT_FORWARD_DECLARE_CLASS(QOpenGLShaderProgram)
QT_FORWARD_DECLARE_CLASS(QOpenGLTexture)

class EMWidget : public QOpenGLWidget, protected QOpenGLFunctions
{
				Q_OBJECT

public:
				explicit EMWidget(QWidget *parent = 0): QOpenGLWidget(parent),
			clearColor(Qt::black),
			xRot(0),
			yRot(0),
			zRot(0),
			program(0)
{
	memset(textures, 0, sizeof(textures));
}
				~EMWidget(){
		makeCurrent();
		vbo.destroy();
		for (int i = 0; i < 6; ++i)
						delete textures[i];
		delete program;
		doneCurrent();
}

				QSize minimumSizeHint() const override;
				QSize sizeHint() const override;
				void rotateBy(int xAngle, int yAngle, int zAngle);
				void setClearColor(const QColor &color);

signals:
				void clicked();

protected:
				void initializeGL() override;
				void paintGL() override;
				void resizeGL(int width, int height) override;
				void mousePressEvent(QMouseEvent *event) override;
				void mouseMoveEvent(QMouseEvent *event) override;
				void mouseReleaseEvent(QMouseEvent *event) override;

private:
				void makeObject();

				QColor clearColor;
				QPoint lastPos;
				int xRot;
				int yRot;
				int zRot;
				QOpenGLTexture *textures[6];
				QOpenGLShaderProgram *program;
				QOpenGLBuffer vbo;
};

//